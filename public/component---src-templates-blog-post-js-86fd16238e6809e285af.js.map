{"version":3,"file":"component---src-templates-blog-post-js-86fd16238e6809e285af.js","mappings":"wOASA,MAAMA,EAAS,CACb,qBAAsB,CACpB,mBAAoB,UAEtBC,WAAY,CACVC,EAAG,CACDC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAaC,IACjBC,EAAAA,EAAAA,GAAA,OAAKC,UAAU,mBAAmBC,GAAIR,EAAOC,aAC3CK,EAAAA,EAAAA,GAAA,UACGD,EAAMI,UAAoD,cAAxCJ,EAAMI,SAASC,YAAYC,WAC5CL,EAAAA,EAAAA,GAAA,WACEA,EAAAA,EAAAA,GAACM,EAAAA,KAAI,CAACC,GAAIR,EAAMI,SAASC,YAAYI,KAAMC,IAAI,SAC7CT,EAAAA,EAAAA,GAAA,KACEE,GAAI,CACFL,MAAO,WAGTG,EAAAA,EAAAA,GAAA,QAAMC,UAAU,eACdD,EAAAA,EAAAA,GAACU,EAAAA,IAAe,OACV,IAAI,aAGdV,EAAAA,EAAAA,GAAA,QAAMC,UAAU,cACbF,EAAMI,SAASC,YAAYO,SAKnCZ,EAAMa,MAA4C,cAApCb,EAAMa,KAAKR,YAAYC,WACpCL,EAAAA,EAAAA,GAAA,WACEA,EAAAA,EAAAA,GAACM,EAAAA,KAAI,CAACC,GAAIR,EAAMa,KAAKR,YAAYI,KAAMC,IAAI,SACzCT,EAAAA,EAAAA,GAAA,KACEE,GAAI,CACFL,MAAO,UAEV,OACM,KACLG,EAAAA,EAAAA,GAAA,QAAMC,UAAU,gBACdD,EAAAA,EAAAA,GAACa,EAAAA,IAAgB,SAGrBb,EAAAA,EAAAA,GAAA,QAAMC,UAAU,cAAcF,EAAMa,KAAKR,YAAYO,WA2DjE,UAnDaG,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAaF,EACjC,MAAM,eAAEG,GAAmBF,GACrB,YAAEX,EAAW,KAAEc,EAAI,QAAEC,GAAYF,EAEjCG,EAAQhB,EAAYiB,cACtBjB,EAAYiB,cAAcC,gBAAgBC,gBAC1C,IACE,SAAEpB,EAAQ,KAAES,GAASI,EAE3B,IAAIjB,EAAQ,CACVI,WACAS,QAGF,OACEZ,EAAAA,EAAAA,GAACwB,EAAAA,EAAM,CAACvB,UAAU,SAChBD,EAAAA,EAAAA,GAACyB,EAAAA,EAAG,CACFd,MAAOP,EAAYO,MACnBe,YACEtB,EAAYsB,YAActB,EAAYsB,YAAcP,EAEtDQ,MAAOP,EACPQ,SAAS,KAEX5B,EAAAA,EAAAA,GAAA,WAASC,UAAU,cACjBD,EAAAA,EAAAA,GAAA,UAAQC,UAAU,oBAChBD,EAAAA,EAAAA,GAAA,WAASC,UAAU,mBACjBD,EAAAA,EAAAA,GAAA,UAAKI,EAAYO,QACjBX,EAAAA,EAAAA,GAAA,QAAME,GAAI,CAACL,MAAO,UAAWO,EAAYyB,OAE1CT,GACCpB,EAAAA,EAAAA,GAAC8B,EAAAA,EAAW,CACVH,MAAOP,EACPW,IAAK3B,EAAYO,MAAQ,oBACzBV,UAAU,mBAGZ,KAIJD,EAAAA,EAAAA,GAAA,OACEC,UAAU,oBACV+B,wBAAyB,CAAEC,OAAQf,OAGrCf,GAAYS,KAASZ,EAAAA,EAAAA,GAACF,EAAeC,I","sources":["webpack://@stackrole/gatsby-starter-foundation/./src/templates/blog-post.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst styles = {\n  \"article blockquote\": {\n    \"background-color\": \"cardBg\",\n  },\n  pagination: {\n    a: {\n      color: \"muted\",\n      \"&.is-active\": {\n        color: \"text\",\n      },\n      \"&:hover\": {\n        color: \"text\",\n      },\n    },\n  },\n}\n\nconst Pagination = props => (\n  <div className=\"pagination -post\" sx={styles.pagination}>\n    <ul>\n      {props.previous && props.previous.frontmatter.template === \"blog-post\" && (\n        <li>\n          <Link to={props.previous.frontmatter.slug} rel=\"prev\">\n            <p\n              sx={{\n                color: \"muted\",\n              }}\n            >\n              <span className=\"icon -left\">\n                <RiArrowLeftLine />\n              </span>{\" \"}\n              Previous\n            </p>\n            <span className=\"page-title\">\n              {props.previous.frontmatter.title}\n            </span>\n          </Link>\n        </li>\n      )}\n      {props.next && props.next.frontmatter.template === \"blog-post\" && (\n        <li>\n          <Link to={props.next.frontmatter.slug} rel=\"next\">\n            <p\n              sx={{\n                color: \"muted\",\n              }}\n            >\n              Next{\" \"}\n              <span className=\"icon -right\">\n                <RiArrowRightLine />\n              </span>\n            </p>\n            <span className=\"page-title\">{props.next.frontmatter.title}</span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\n\nconst Post = ({ data, pageContext }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html, excerpt } = markdownRemark\n\n  const Image = frontmatter.featuredImage\n    ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\n    : \"\"\n  const { previous, next } = pageContext\n\n  let props = {\n    previous,\n    next,\n  }\n\n  return (\n    <Layout className=\"page\">\n      <Seo\n        title={frontmatter.title}\n        description={\n          frontmatter.description ? frontmatter.description : excerpt\n        }\n        image={Image}\n        article={true}\n      />\n      <article className=\"blog-post\">\n        <header className=\"featured-banner\">\n          <section className=\"article-header\">\n            <h1>{frontmatter.title}</h1>\n            <time sx={{color: \"muted\"}}>{frontmatter.date}</time>\n          </section>\n          {Image ? (\n            <GatsbyImage\n              image={Image}\n              alt={frontmatter.title + \" - Featured image\"}\n              className=\"featured-image\"\n            />\n          ) : (\n            \"\"\n          )}\n        </header>\n\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n      {(previous || next) && <Pagination {...props} />}\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      excerpt(pruneLength: 148)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        description\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["styles","pagination","a","color","Pagination","props","jsx","className","sx","previous","frontmatter","template","Link","to","slug","rel","RiArrowLeftLine","title","next","RiArrowRightLine","_ref","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","gatsbyImageData","Layout","Seo","description","image","article","date","GatsbyImage","alt","dangerouslySetInnerHTML","__html"],"sourceRoot":""}